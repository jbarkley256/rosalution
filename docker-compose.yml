version: '3.5'

services:
  reverse-proxy:
    image: traefik
    command: --log.level=DEBUG --api.insecure=true --providers.docker
    ports: 
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - divergen-network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=divergen-network"
  
  frontend:
    build:
      context: ./frontend/
      target: development-stage
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app/src
    networks:
      - divergen-network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=divergen-network"
      - "traefik.http.routers.divergen-router.entrypoints=http"
      - "traefik.http.routers.divergen-router.rule=HOST(`local.divergen.cgds`)"
      - "traefik.http.routers.divergen-router.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.hmr-router.entrypoints=http"
      - "traefik.http.routers.hmr-router.rule=HOST(`local.divergen.cgds`) && PathPrefix(`/socket.io`)"
      - "traefik.http.services.frontend-hmr.loadbalancer.server.port=3001"

networks:
  divergen-network:
    name: divergen-network